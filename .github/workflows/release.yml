name: Release

on:
  push:
    branches: [main]

jobs:
  ci:
    uses: ./.github/workflows/ci.yml
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  release:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git checkout HEAD^

      - name: Create a Github Release
        id: release
        uses: rymndhng/release-on-push-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          bump_version_scheme: minor
          tag_prefix: v
          release_name: "Release <RELEASE_VERSION>"

      - name: Check Output Parameters
        run: |
          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
          echo "Got release version ${{ steps.release.outputs.version }}"

      - name: Split version
        id: clean_version
        uses: jungwinter/split@v2
        with:
          msg: ${{steps.release.outputs.version}}

      - name: Cache Maven Packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn package --file agent-app/pom.xml -DskipTests

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set Up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./agent-app
          push: false
          secrets: |
            GIT_AUTH_TOKEN = ${{ secrets.GITHUB_TOKEN }}
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ secrets.DOCKER_USERNAME }}/agent-app:${{ steps.clean_version.outputs._1 }}
          load: true

      - name: Docker push
        id: docker_push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          secrets: |
            GIT_AUTH_TOKEN = ${{ secrets.GITHUB_TOKEN }}
          tags: ${{ secrets.DOCKER_USERNAME }}/agent-app:${{ steps.clean_version.outputs._1 }}

      - name: Upload image
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/agent-app:${{ steps.clean_version.outputs._1 }}

      - name: Upload Jar Artifact
        uses: actions/upload-artifact@v3
        with:
          name: agent-app-build-${{ steps.clean_version.outputs._1 }}.jar
          path: target/*.jar